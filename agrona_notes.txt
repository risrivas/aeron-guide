## Agrona
High-performance data structures and utility methods for Java

##########
# Buffers
##########
http://insightfullogic.com/2015/Apr/18/agronas-threadsafe-offheap-buffers/

# Deficiencies of Java ByteBuffer
- Java provides ByteBuffer class to wrap both offheap and onheap memory
- Bytebuffers are specifically used in the Java networking stack as a places for data to be read from or written into
- don't offer support for atomic operations
- If want to write an offheap data structure that's concurrently accessed from different processes, then ByteBuffer don't address it.
- might want to write to a message queue that one process will read from and another will write to

# Agrona's Buffer
- these buffers are used by Aeron and SBE:
DirectBuffer - the top level interface that provides the ability to read values from the buffer
MutableDirectBuffer - extends DirectBuffer adding operations for writing to the buffer
AtomicBuffer - adds atomic operations and compare-and-swap semantics
UnsafeBuffer - default implementation - backing implementation uses sun.misc.Unsafe

- different buffers so that components which only want to read should only use DirectBuffer
- similarly, single threaded components should not use AtomicBuffer

# Wrapping underlying memory
- to work with buffer, need to know where the buffer begins with (just like arrays)
- All the methods for wrapping memory are called wrap() and its possible to wrap a byte[], ByteBuffer or DirectBuffer.
- can also specify an offset and length with which to wrap the data structures.
- example
wrap a byte[] =>
        final int offset = 0;
        final int length = 5;
        buffer.wrap(new byte[length], offset, length);

-
